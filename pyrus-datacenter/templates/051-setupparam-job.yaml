{{- if not (lookup "batch/v1" "Job" .Release.Namespace "set-pyrus-setupparam") }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: &name set-pyrus-setupparam
  labels: &selector
    app: *name
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    meta.helm.sh/release-name: {{ .Release.Name | quote }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace | quote }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-5"
    #helm.sh/hook-delete-policy: hook-failed
spec:
  activeDeadlineSeconds: 1200
  template:
    metadata:
      labels: *selector
    spec:
      restartPolicy: OnFailure
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: docker-pyrus-cred
{{- end }}
      initContainers:
        - name: depends-on
          image: {{ .Values.containersRepo.default }}/k8s-waits
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          command:
            - wait_endpoints
{{- if not .Values.database.external }}
            - {{ .Release.Namespace }}/endpoints/pyrus-postgresql
{{- end }}
            - {{ .Release.Namespace }}/endpoints/pyrus-elastic
            - {{ .Release.Namespace }}/endpoints/pyrus-logs-pgsql

{{- if not .Values.database.external }}
{{- if not (hasKey .Values.standalonePostgreSQLBackup "RESTORE_NAME")  }}

        - name: setup-create-db
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          args: [
            "--create", "--skip",
            "--email", "{{ .Values.pyrusSetupParam.adminEmail }}",
            "--adminpassword",  "{{ .Values.pyrusSetupParam.adminPass }}"
            ]
          envFrom:
            - configMapRef:
                name: common-variables

{{- end }}

        - name: start-change-tracking
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -ct
            - --start

{{- end }}

        - name: setup-elastic-index-it
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -it

        - name: setup-elastic-index-in
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -in

        - name: setup-elastic-index-ic
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -ic

        - name: setup-elastic-index-ip
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -ip

{{- if hasKey .Values.standalonePostgreSQLBackup "RESTORE_NAME"  }}

        - name: setup-administrator-account
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args: [
            "--setadmin",
            "--email", "{{ .Values.pyrusSetupParam.adminEmail }}",
            "--adminpassword",  "{{ .Values.pyrusSetupParam.adminPass }}"
            ]

        - name: setup-elastic-index-rt
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -rt

        - name: setup-elastic-index-wgall
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -wgall

        - name: setup-elastic-index-wcall
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -wcall

        - name: setup-elastic-index-wpall
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -wpall

        - name: setup-elastic-index-wnall
          image: {{ .Values.containersRepo.default }}/pyrus-elastic-console:{{ .Values.tagsContainers.All }}
          imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - -wnall
{{- end }}

{{- if .Values.pyrusSetupParam.s3 }}
        - name: setup-s3-storrage-1
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args: [ "--setup", "-id", "9900151", "-v", "{{ .Values.pyrusSetupParam.s3.keyId }}"]

        - name: setup-s3-storrage-2
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args: ["--setup", "-id", "9900152", "-v", "{{ .Values.pyrusSetupParam.s3.secretKey }}"]

        - name: setup-s3-storrage-3
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args: ["--setup", "-id", "9900153", "-v", "{{ .Values.pyrusSetupParam.s3.buket }}"]

        - name: setup-s3-storrage-4
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args: [ "--setup", "-id", "9910002", "-v", "{{ .Values.pyrusSetupParam.s3.region }}" ]

        - name: setup-s3-storrage-5
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args: [ "--setup", "-id", "9910004", "-v", "{{ .Values.pyrusSetupParam.s3.useit }}"]
{{- end}}

        - name: setup-license-variables
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args: ["--setup", "-id", "100000", "-v", "{{ .Values.pyrusSetupParam.license }}"]

        - name: setup-domain-name
          image: {{ .Values.containersRepo.default }}/{{ .Values.imageDevPrefix }}pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args: ["--setup", "-id", "100001", "-v", "{{ first (first (index .Values "values-ingress-dir").tls).hosts }}"]

{{- if .Values.imageDevPrefix }}
        - name: update-database-for-dev
          image: {{ .Values.containersRepo.default }}/dev-pyrus-setup:{{ .Values.tagsContainers.All }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: common-variables
          args:
            - --update
{{- end }}
      containers:
        - name: setup-complite
          image: {{ .Values.containersRepo.default }}/k8s-waits
          imagePullPolicy: IfNotPresent
          command: [ "ls" ]
{{- end }}
